!RECAP:
What are the 4 components in a process (in memory)
    Text, data, heap, stack

Provide atlest 3 states that a process can be in
    Running, Wait, Ready, Terminated

What is a Process Control Block (PCB)
    The datastructure in the kernel, that represent the kernel
    The meta-information
    Where you save the data, when you do a context switch

What is another term for process?
    

What is the role of the process scheduler?
    The scheduler chooses a process from the ready queue

What is the degree of multiprogramming?
    The number of processes running on the system
    eg, 200 process running at the same time

What system call creates a new process on a UNIX system?
    fork();

What are the two fundemental model of interprocess communication?
    Message passing
    Shared memory




Process creation
    . fork --> Deep copy. Editing a file as child, doesn't affect parents file
    . clone -> You choose what memory is shared

Process Termination
    . SIGKILL --> sends kill signal 9
    . CTRL + C in Linux sends SIGINT, to interrupt

Implementation of communication link
    . Physical
        - Shared memory
            . Memory mapping
        - Hardware bus
    . Logical
        - Direct
            . send(P, message) - Send a message to process P
            . receive(Q, message) - Recieve a message from process Q
        - Indirect
            . Messages are directed to a mailbox
            . Processes can communicate only if they share a mailbox
            . Mailbox may be shared by many processes
            . send(A, message) - send a message to mailbox A
            . recieve(A, message) - recieve a message from mailbox A
        - Synchronous
            . Blocking send has the sender vlock until the message is recieved
            . Blocking reciever has the reciver block until a message is available
            . Non-blocking send has the sender send the message and continue
            . Non-blocking recieve has the reciever receive a valid message or null
        - Buffering 
            . Queue of messages attached to the link: implemented in one of three ways
              1. Zero capacity - 0 messages
                 Sender must wait for receiver (rendezvous)
              2. Bounded capacity - finite length of n messages
                 Sender must wait if link full
              3. Unbounded capacity - infinite length
                 Sender never waits

Remote Procedure Calls
    . Port mapper
        - Client send a message and port mapper send the port that provides 
          the service and send the port num. back to the client
          The client can then contact the port providing the service
        - Runs on port 111
    . Stubs
        - Client-side proxy for the actual procedure on the server
        - Client-side marshalls the parameters (packs and send them)
    . External Data Representation (XDL)
        - formats to account for different architectures
            . eg, Big-endian / Little-endian


Pipes
  - Takes the output of one process and pipes it to the input of another process
    . Ordinary pipes
        - Allows coomunication in standard producer-consomer style
        - Unidirectional
    . 




